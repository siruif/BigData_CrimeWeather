package edu.uchicago.mpcs53013.CrimeIngest;

import java.io.BufferedReader;
//import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
//import java.io.InputStream;
import java.io.InputStreamReader;
//import java.util.Arrays;
//import java.util.HashMap;
//import java.util.Map;
//import java.util.regex.Matcher;
//import java.util.regex.Pattern;
//import java.util.zip.GZIPInputStream;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipEntry;

import edu.uchicago.mpcs53013.CrimeSummary.CrimeSummary;


public abstract class CrimeSummaryProcessor {
	static class MissingDataException extends Exception {

	    public MissingDataException(String message) {
	        super(message);
	    }

	    public MissingDataException(String message, Throwable throwable) {
	        super(message, throwable);
	    }

	}
	
	static double tryToReadMeasurement(String name, String s, String missing) throws MissingDataException {
		if(s.equals(missing))
			throw new MissingDataException(name + ": " + s);
		return Double.parseDouble(s.trim());
	}

	void processLine(String line, File file) throws IOException {
		try {
			processCrimeSummary(crimeFromLine(line), file);
		} catch(MissingDataException e) {
			// Just ignore lines with missing data
		}
	}

	abstract void processCrimeSummary(CrimeSummary summary, File file) throws IOException;
	
	BufferedReader getFileReader(File file) throws FileNotFoundException, IOException {
//		System.out.println(file.getName()+ "~~~~~~~~~~~~~~~~~");
		if(file.getName().endsWith(".zip")){
			ZipInputStream zis = new ZipInputStream(new FileInputStream(file));
			ZipEntry ze = zis.getNextEntry();
			if (ze.getName().endsWith("csv")){
				return new BufferedReader(new InputStreamReader(zis));
				
			}
		}
//			return new BufferedReader;}
//					InputStream r = new InputStreamReader
//					    		 (new GZIPInputStream
//					    				 (new FileInputStream(file))));
		return new BufferedReader(new InputStreamReader(new FileInputStream(file)));
	}
	
	void processNoaaFile(File file) throws IOException {		
		BufferedReader br = getFileReader(file);
		
		br.readLine(); // Discard header
		String line;
		while((line = br.readLine()) != null) {
			processLine(line, file);
		}
	}

	void processNoaaDirectory(String directoryName) throws IOException {
		File directory = new File(directoryName);
		File[] directoryListing = directory.listFiles();
		//System.out.println(directoryListing);
		for(File noaaFile : directoryListing)
			processNoaaFile(noaaFile);
	}
	
	CrimeSummary crimeFromLine(String line) throws NumberFormatException, MissingDataException {
		String lineArray[] = line.split(",");
		
		System.out.println(lineArray[12].getClass());

		CrimeSummary summary = new CrimeSummary(lineArray[2],
				Byte.parseByte(lineArray[3].substring(0, 2)),
                Byte.parseByte(lineArray[3].substring(3, 5)),
                Short.parseShort(lineArray[3].substring(6,10)),
                lineArray[4],
                lineArray[5],
                Integer.parseInt(lineArray[12]));
		System.out.println("You should get here");
		return summary;
	}

}
